{"version":3,"sources":["components/Gallery.jsx","components/Video.jsx","App.js","reportWebVitals.js","index.js"],"names":["Gallery","data-src","Video","React","useState","showNextButton","setShowNextButton","buttonPressed","setButtonPressed","url","width","height","controls","onEnded","Button","variant","size","onClick","App","className","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAiBeA,MAbf,WAEI,OACI,qCACI,gDACA,cAAC,IAAD,UACI,qBAAKC,WAAS,mBCgCfC,MArCf,WAAkB,IAAD,EAE+BC,IAAMC,UAAS,GAF9C,mBAENC,EAFM,KAEUC,EAFV,OAG6BH,IAAMC,UAAS,GAH5C,mBAGNG,EAHM,KAGSC,EAHT,KAKb,OACI,sCAESD,GACD,qCACI,wEACA,6CACA,cAAC,IAAD,CACIE,IAAK,aACLC,MAAM,OACNC,OAAO,OAEPC,UAAU,EACVC,QAAS,kBAAMP,GAAkB,MAGjCD,GACA,cAACS,EAAA,EAAD,CACIC,QAAQ,YACRC,KAAK,KACLC,QAAS,kBAAMT,GAAiB,IAHpC,0CASRD,GAAiB,cAAC,EAAD,Q,MCrBlBW,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,CAAOC,KAAK,eCGLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72d74cee.chunk.js","sourcesContent":["import React from 'react'\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\n\nfunction Gallery() {\n\n    return (\n        <>\n            <h1>Money Shots!!!</h1>\n            <AwesomeSlider>\n                <div data-src=\"test.png\" />\n            </AwesomeSlider>\n\n        </>\n    );\n}\n\nexport default Gallery;","import React from 'react'\nimport ReactPlayer from 'react-player'\nimport Button from 'react-bootstrap/Button';\nimport Gallery from './Gallery.jsx'\n\nfunction Video() {\n\n    const [showNextButton, setShowNextButton] = React.useState(false)\n    const [buttonPressed, setButtonPressed] = React.useState(false)\n\n    return (\n        <>\n            {\n                !buttonPressed &&\n                <>\n                    <h1>Happy Birthday Bukkake Bonanza Tom!!!!</h1>\n                    <p>Watch it all</p>\n                    <ReactPlayer\n                        url={\"./test.MP4\"}\n                        width=\"100%\"\n                        height=\"100%\"\n\n                        controls={true}\n                        onEnded={() => setShowNextButton(true)} />\n\n                    {\n                        showNextButton &&\n                        <Button\n                            variant=\"secondary\"\n                            size=\"lg\"\n                            onClick={() => setButtonPressed(true)}>Click Here 4 More Bukkake</Button>\n\n                    }\n                </>\n            }\n            {\n                buttonPressed && <Gallery />\n            }\n        </>\n    );\n}\n\nexport default Video;","import './App.css';\nimport Video from './components/Video.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Video name=\"World\"/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}